frameworkVersion: '4.21.0'
# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: vboyparty
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: backend
# "service" is the name of this project. This will also be added to your AWS resource names.
service: backend

provider:
  name: aws
  runtime: nodejs20.x
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  environment:
    MY_DYNAMODB_TABLE: ${self:service}-${opt:stage, 'dev'}-table
  iamRoleStatements:
  - ${file(iam/BookingTableIAM.yml):BookingTableIAM}
  # Uncomment to easily set up a custom domain. Read the docs for more details:
  # https://www.serverless.com/framework/docs/providers/aws/guide/domains
  # domain: api.example.com

functions:
  create:
    handler: handlers/createBooking.handler
    events:
      - http:
          path: /
          method: post
          cors: true
  getAll:
    handler: handlers/getAllBookings.handler
    events:
      - http:
          path: /
          method: get
          cors: true
  getById:
    handler: handlers/getBookingById.handler
    events:
      - http:
          path: /{id}
          method: get
          cors: true
  update:
    handler: handlers/updateBooking.handler
    events:
      - http:
          path: /{id}
          method: put
          cors: true
  delete:
    handler: handlers/deleteBooking.handler
    events:
      - http:
          path: /{id}
          method: delete
          cors: true

resources:
  Resources:
    BookingTable: ${file(resources/BookingTable.yml):BookingTable}

custom:
  BookingTable:
    name: !Ref BookingTable
    arn: !GetAtt BookingTable.Arn